#define INTRO 13


#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<conio.h>
#include<time.h>

#define NUM_PALABRAS 16           //Numero de palabras
#define MAX_STRING 20            //Longitud máxima de la cadena inicial.
#define NUM_INTENTOS 5

void llamada(char c[3][3]); //Prototipo de la funcion
void valoresmatriz(char c[3][3]);
void tablero(char c[3][3]);
void fichajugador(char c[3][3]);
void fichaordenador(char c[3][3]);
int ganador(char c[3][3]);

void guiones(int);
void historial(char letra, char* palabra, char* vector, int largo, int* flag, int intentos);


void titulo();
void menu(); //Titulo principal en ascii
void historia1();
void historia2();
void investigacion1();
void investigacion2();
void resolver();



int main(void) {
    titulo();
    menu();
}



void menu() {

    int  aux;
    char nombre[30], a, b, c, nivel;
    char p[100];
    typedef struct{
int d;
int m;
int a;

}date;

typedef struct{
char n[10];
char a[10];
int t;
date fn;

}contacto;


    printf("**Bienvenido a nuestro ESCAPE ROOM creado por Or%cculo Team.**\n\n",163);
    printf("Antes de empezar el juego lea las instrucciones del juego\n\n");
    system("pause>>null \n\n");
    system("cls");

    FILE *pf;

    pf = fopen("Instrucciones.txt","r");

    if (pf == NULL)
     {
      printf("Error al abrir el fichero.\n");
      return -1;
    }
    while(!feof(pf)){
    fgets(p,100,pf);
    printf("%s",p);
    }
    printf("\n");
    system("pause>>null \n\n");
    system("cls");

    contacto persona;
printf("nombre: ");
scanf("%10s",persona.n);
printf("apodo: ");
scanf("%10s",persona.a);
printf("telefono(recibiras notificaciones de las novedades del juego): ");
scanf("%i",&persona.t);
printf("fecha de nacimiento : ");
scanf("%i %i %i",&persona.fn.d,&persona.fn.m,&persona.fn.a);
printf("\n%s\n%s\n%i-%i-%i\n",persona.n,persona.a,persona.fn.d,persona.fn.m,persona.fn.a);

    printf("Pulse 1: Para elegir dificultad.\n");
    printf("Pulse 0: Para salir del juego.\n");
    while (scanf("%i", & aux) == 0 || (aux != 0 && aux != 1)) {
        while (getchar() != '\n');
        printf("Pulse 1 o 0!!Por favor!!!\n");
    }
    while (getchar() != '\n');



    if (aux == 0) {
        printf("Hasta luego. Vuelva pronto\n");
    }



    if (aux == 1) {



        printf("\nElija nivel:\n a.Bajo\n b.Medio\n c.Alto\n ");
        while (scanf("%c", &nivel), nivel != 'a' && nivel != 'b' && nivel != 'c') {
            while (getchar() != '\n');
             printf("Escriba bien la letra en min%csculua!!Por favor!!!\n",163);
        }
        while (getchar() != '\n');
        switch (nivel) {
            case 'a':
                printf("%s Ha elegido el nivel Bajo.\nA continuaci%cn empieza el juego...\nSUERTE!!!!!\n",persona.a,162);
                system("pause>>null \n\n");
                system("cls");
                historia1();

                int n, a, i = 15;
                char r;
                printf("Para que Marcos encuentre los utensilios para arreglar la gotera, primero tiene que encontrar cual era el n%cmero de la llave del cuarto de las herramientas.\n",163);
                printf(".................... \n");
                srand(time(NULL));
                n = rand() % 100 + 1;
                for (i; i >= 1; i--) {
                   printf("\n te quedan %i intentos \n", i);
                   printf("escribe un n%cmero(0-100) : ",163);


                    scanf("%i", & a);



                    if (a < n) {
                        printf("\nTe quedas corto \n\n");
                    } else if (a > n) {
                        printf("\nTe pasas \n\n");



                    } else;
                    if (a == n) {
                        printf("ENCONTRASTE LA LLAVE!!!! ");
                        system("pause>>null \n\n");
                        system("cls");
                        historia2();
                        investigacion1();
                        investigacion2();

                        char respuesta[31];
                        printf("Donde mato Critobal a sus padres? Dentro o fuera del gabinete?\n");
                        printf("Escribe respuesta:\n");
                        scanf(" %30s", respuesta);
                        if (strcmp(respuesta,"fuera")!=0)
                        {
                        printf("Has perdido, sigue intentandolo.");
                        }
                        else
                        {
                        printf("Has resuelto el asesinato!!!! Superaste el Scape Room!!!!");
                        }
                        system("pause>>null \n\n");
                        system("cls");
                        resolver();
                        return 1;
                    } else;
                }
                printf("\n Perdiste el n%Cmero es %i",163,n);
                return 0;
                break;



            case 'b':
                printf("%s Ha elegido el nivel Medio.\nA continuaci%cn empieza el juego...\nSUERTE!!!!!\n",nombre,162);
                system("pause>>null \n\n");
                system("cls");
                historia1();


                int n2, a2, i2 = 15;
                char r2;
                printf("Para que Marcos encuentre los utensilios para arreglar la gotera, primero tiene que encontrar cual era el n%cmero de la llave del cuarto de las herramientas.\n",163);
                printf(".................... \n");
                srand(time(NULL));
                n2 = rand() % 100 + 1;
                for (i2; i2 >= 1; i2--) {
                   printf("\n te quedan %i intentos \n", i2);
                   printf("escribe un n%cmero(0-100) : ",163);


                    scanf("%i", & a2);



                    if (a2 < n2) {
                        printf("\nTe quedas corto \n\n");
                    } else if (a2 > n2) {
                        printf("\nTe pasas \n\n");



                    } else;
                    if (a2 == n2) {
                        printf("ENCONTRASTE LA LLAVE!!!! ");
                        system("pause>>null \n\n");
                        system("cls");
                        historia2();
                        investigacion1();
                        printf("Para que estos polic%cas te dejen participar en la investigaci%cn, el capit%can, el mas condescendiente de todos, te dice que le tendr%cas que ganar primero al tres en raya.",161,162,160,160);
                        system("pause>>null \n\n");
                        system("cls");

                        char c[3][3];
			            llamada(c); //Llama a las funciones y hace un refresco de pantalla

			            system("pause");

                        char respuesta[31];
                        printf("Donde mato Critobal a sus padres? Dentro o fuera del gabinete?\n");
                        printf("Escribe respuesta:\n");
                        scanf(" %30s", respuesta);
                        if (strcmp(respuesta,"fuera")!=0)
                        {
                        printf("Has perdido, sigue intentandolo.");
                        }
                        else
                        {
                        printf("Has resuelto el asesinato!!!! Superaste el Scape Room!!!!");
                        }
                        system("pause>>null \n\n");
                        system("cls");
                        resolver();
                        return 1;
			            return 0;
                    } else;
                }
                printf("\n Perdiste el n%cmero es %i",163,n2);
                return 0;
                break;




            case 'c':
                printf("%s Ha elegido el nivel Alto.\nA continuaci%cn empieza el juego...\nSUERTE!!!!!\n", nombre,162);
                system("pause>>null \n\n");
                system("cls");
                historia1();

                int n3, a3, i3 = 15;
                char r3;
                printf("Para que Marcos encuentre los utensilios para arreglar la gotera, primero tiene que encontrar cual era el n%cmero de la llave del cuarto de las herramientas.\n",163);
                printf(".................... \n");
                srand(time(NULL));
                n3 = rand() % 100 + 1;
                for (i3; i3 >= 1; i3--) {
                   printf("\n te quedan %i intentos \n", i3);
                   printf("escribe un n%cmero(0-100) : ",163);


                    scanf("%i", & a3);



                    if (a3 < n3) {
                        printf("\nTe quedas corto \n\n");
                    } else if (a3 > n3) {
                        printf("\nTe pasas \n\n");



                    } else;
                    if (a3 == n3) {
                        printf("ENCONTRASTE LA LLAVE!!!! ");
                        system("pause>>null \n\n");
                        system("cls");
                        historia2();
                        investigacion1();
                        printf("Para que estos polic%cas te dejen participar en la investigaci%cn, el capit%can, el mas condescendiente de todos, te dice que le tendr%cas que ganar primero al tres en raya.",161,162,160,160);
                        system("pause>>null \n\n");
                        system("cls");

                        char c[3][3];
			            llamada(c); //Llama a las funciones y hace un refresco de pantalla

			            system("pause");

			            	int intro = 0, gamemode = 0;
                            printf("Bienvenido al juego del ahorcado.\n\n");
                            printf("Con tal de no darte la raz%cn los polic%cas culpan a Marcos y lo mandan a la horca. ¡Tienes que salvarlo! Adivina la palabra aleatoria y vivir%c.\n\n",162,161,160);
                            system("pause>>null \n\n");
                            system("cls");




                           int  largo;                                          //Longitud de la palabra.
	char *palabra = NULL, letra;                         //Cadena de la palabra y la letra introducida por el usuario.
	int  intentos = 0;                                   //Numero de intentos.
	int  flag = 0;

	if (gamemode == 0)
	{

		srand(time(NULL)); //aleatorio
		char *bateria[] = { "CAMION","PUENTE","COCODRILO","SAPO","SOMBRERO","DELEGADO","HELADO","LATA","PELOTA","PIMIENTO","AGUA",
							"CHOCOLATE","HIPOPOTAMO","APROBAR","TRABAJO","INFORMATICA" };
		int aleatorio = rand() % ((NUM_PALABRAS - 1) + 1);
		//Genera entre 0 1 2 3 4

		largo = strlen(bateria[aleatorio]) + 1;
		palabra = (char*)calloc(largo, sizeof(char));

		if (palabra == NULL) {
			printf("No se ha podido reservar la memoria.");
			exit(1);
		}

		else strcpy(palabra, bateria[aleatorio]);
		printf("Una palabra ha sido escogida. Buena Suerte!Antes de comenzar ponga sus dos iniciales.");

}
                            guiones(largo);
                            char *vector;
                            vector = (char*)calloc(largo, sizeof(char));                        //Vector vacio.
                            if (vector == NULL) {
                                printf("No se ha podido reservar la memoria.");
                                exit(1);
                            };

                            char *ahorcado[] = {
                                             " ",
                                             "                                                                      |=====|\n"
                                             "                                                                            |\n"
                                             "                                                                            |\n"
                                             "                                                                            |\n"
                                             "                                                                           ===\n",
                                             "                                                                      |=====|\n"
                                             "                                                                      O     |\n"
                                             "                                                                            |\n"
                                             "                                                                            |\n"
                                             "                                                                           ===\n",
                                             "                                                                      |=====|\n"
                                             "                                                                      O     |\n"
                                             "                                                                      |     |\n"
                                             "                                                                            |\n"
                                             "                                                                           ===\n",
                                             "                                                                      |=====|\n"
                                             "                                                                      O     |\n"
                                             "                                                                     -|-    |\n"
                                             "                                                                            |\n"
                                             "                                                                           ===\n",
                                             "                                                                      |=====|\n"
                                             "                                                                      O     |\n"
                                             "                                                                     -|-    |\n"
                                            "                                                                     / \\    |\n"
                                             "                                                                           ===\n"

                            };

                            //juego
while (flag == 0) {


		//introduce letra el usuario
		printf("Adivina una letra:  ");
		scanf("%c", &letra);
		printf("\n");
		getchar();


		while (letra < 65 || (letra > 90 && letra < 97) || letra>122) {            // Condiciones de introducir una letra mayus o minus.
			printf("Por favor, introduzca un caracter valido.");
			scanf("%c", &letra);
			getchar();
		}
		system("cls");
		//transformamos todas las letras a mayusculas
		if (letra >= 97) letra = letra - 32;

		/*Comprobar si la letra introducida está en la palabra y completar los huecos*/
		historial(letra, palabra, vector, largo, &flag, intentos);


		if (flag == 2)
		{
			intentos++;
			printf("LETRA INCORRECTA.");
			printf("\n\n%s\n\n", ahorcado[intentos]);                             //sale ahorcado.

			if (intentos >= NUM_INTENTOS)
			{
				printf("Se acabo, han condenado a Marcos.\n");
				printf("La palabra correcta era %s.\n", palabra);
				break;
			}
			switch (intentos) {
			case 1:printf("COMENZAMOS\n\n"); break;
			case 2:printf("Esto puede ser peligroso...\n\n"); break;
			case 3:printf("La cosa se pone muy fea...\n\n"); break;
			case 4:printf("Se acerca su final!\n\n"); break;
			}
		}
		if (flag == 1)
		{
			if (intentos > 0)
			{
				printf("LETRA CORRECTA.");
				printf("\n\n%s\n\n", ahorcado[intentos]);
			}
			printf("Bien hecho!\n");
		}
		/* Reseteamos el valor de la flag para que vuelva al bucle */
		flag = 0;


                            }

                            free(palabra); // a veces da fallo, estudiar.
                            free(vector);
                        system("pause>>null \n\n");
                        system("cls");
			            return 0;
			               } else;
                }
                printf("\n Perdiste el n%cmero es %i",163,n3);
                return 0;
                break;

        }



    }
    system("pause>>null \n\n");
    system("cls");




}
void titulo() {
    printf(" \333\333\333\333\333\333 \333\333\333\333\333   \333\333\333\333\333       \333\333        \333\333\333\333\333\333  \333\333\333\333\333\333    \333\333\333\333\333\333   \333\333\333\333\333   \333\333\333\333\333  \333\333\333       \333\333\333\n");
	printf(" \333\333\333\333\333\333 \333\333\333\333\333 \333\333\333\333\333\333\333      \333\333\333\333       \333\333\333\333\333\333  \333\333\333\333\333\333    \333\333\333\333\333\333  \333\333   \333\333 \333\333   \333\333 \333\333 \333     \333 \333\333\n");
	printf(" \333\333     \333     \333           \333\333  \333\333      \333\333    \333 \333         \333\333    \333 \333\333   \333\333 \333\333   \333\333 \333\333  \333   \333  \333\333\n");
	printf(" \333\333\333\333   \333\333\333\333\333 \333          \333\333    \333\333     \333\333    \333 \333\333\333\333      \333\333    \333 \333\333   \333\333 \333\333   \333\333 \333\333   \333 \333   \333\333\n");
	printf(" \333\333     \333\333\333\333\333 \333         \333\333      \333\333    \333\333    \333 \333         \333\333\333\333\333\333  \333\333   \333\333 \333\333   \333\333 \333\333    \333    \333\333\n");
	printf(" \333\333         \333 \333        \333\333\333\333\333\333\333\333\333\333\333\333   \333\333\333\333\333\333  \333         \333\333 \333\333   \333\333   \333\333 \333\333   \333\333 \333\333         \333\333\n");
	printf(" \333\333\333\333\333\333 \333\333\333\333\333 \333\333\333\333\333\333\333 \333\333          \333\333  \333\333      \333\333\333\333\333\333    \333\333  \333\333  \333\333   \333\333 \333\333   \333\333 \333\333         \333\333\n");
    printf(" \333\333\333\333\333\333 \333\333\333\333\333   \333\333\333\333\333\333\333            \333\333 \333\333      \333\333\333\333\333\333    \333\333   \333\333  \333\333\333\333\333   \333\333\333\333\333  \333\333         \333\333\n");





    system("pause>>null \n\n"); //Paramos el programa sin el mensaje.
    system("cls");
}

void llamada(char c[3][3])



{
    //Vamos a poner un contador porque tenemos un numero finito de tiradas
    int i, j;



    i = 0;
    valoresmatriz(c);



    do {
        system("cls"); //Borra todo lo q hay en pantalla
        tablero(c);
        if (i % 2 == 0) //Si el resto de i entre dos es igual a cero, vamos nosotros
        {
            fichajugador(c);
        } else {
            fichaordenador(c);
        }
        j = ganador(c);
        i++;
        system("cls"); //Borra todo lo q hay en pantalla
        tablero(c);



    } while (i <= 9 && j == 2);
    if (j == 0) {
        printf("Enhorabuena!! Has ganado!!Los polic%cas te permiten participar en la investigaci%cn.\n\n",161,162);
        system("pause>>null \n\n");
        system("cls");
        investigacion2();

    } else if (j == 1) {
        printf("Has perdido, el caso se queda sin resolver.\n\n");
    } else {
        printf("Has empatado, el caso se queda sin resolver.\n\n");
    }
}



//Función para introducir los numeros en la matriz



void valoresmatriz(char c[3][3]) {
    int i, j;
    char mat;



    mat = '1';



    for (i = 0; i < 3; i++) {
        for (j = 0; j < 3; j++) {
            c[i][j] = mat++; //asi el numero va aumentando
        }
    }



}



//Función para introducir yo los valores



void fichajugador(char c[3][3]) {



    int i, j, k;
    char num;
    //Tiene que ser un valor entre 1 y 9



    do {
        do {
            printf("Escribe el n%cmero donde te gustar%ca poner la ficha: ",163,161);
            //fflush(stdin);
            scanf("%c", & num);
        } while (num < '1' || num > '9');
        //Hay que controlar que no se puede coger el mismo numero dos veces



        k = 0;



        switch (num) {
            case '1':
                {
                    i = 0;
                    j = 0;
                    if (c[i][j] == 'X' || c[i][j] == '0') {
                        k = 1;
                        printf("Esa casilla ya esta ocupada, elige otra\n\n");
                    }
                    break;
                }
            case '2':
                {
                    i = 0;
                    j = 1;
                    if (c[i][j] == 'X' || c[i][j] == '0') {
                        k = 1;
                        printf("Esa casilla ya está ocupada, elige otra\n\n");
                    }
                    break;
                }
            case '3':
                {
                    i = 0;
                    j = 2;
                    if (c[i][j] == 'X' || c[i][j] == '0') {
                        k = 1;
                        printf("Esa casilla ya está ocupada, elige otra\n\n");
                    }
                    break;
                }
            case '4':
                {
                    i = 1;
                    j = 0;
                    if (c[i][j] == 'X' || c[i][j] == '0') {
                        k = 1;
                        printf("Esa casilla ya está ocupada, elige otra\n\n");
                    }
                    break;
                }
            case '5':
                {
                    i = 1;
                    j = 1;
                    if (c[i][j] == 'X' || c[i][j] == '0') {
                        k = 1;
                        printf("Esa casilla ya está ocupada, elige otra\n\n");
                    }
                    break;
                }
            case '6':
                {
                    i = 1;
                    j = 2;
                    if (c[i][j] == 'X' || c[i][j] == '0') {
                        k = 1;
                        printf("Esa casilla ya está ocupada, elige otra\n\n");
                    }
                    break;
                }
            case '7':
                {
                    i = 2;
                    j = 0;
                    if (c[i][j] == 'X' || c[i][j] == '0') {
                        k = 1;
                        printf("Esa casilla ya está ocupada, elige otra\n\n");
                    }
                    break;
                }
            case '8':
                {
                    i = 2;
                    j = 1;
                    if (c[i][j] == 'X' || c[i][j] == '0') {
                        k = 1;
                        printf("Esa casilla ya está ocupada, elige otra\n\n");
                    }
                    break;
                }
            case '9':
                {
                    i = 2;
                    j = 2;
                    if (c[i][j] == 'X' || c[i][j] == '0') {
                        k = 1;
                        printf("Esa casilla ya está ocupada, elige otra\n\n");
                    }
                    break;
                }
        }
    } while (k == 1);
    c[i][j] = 'X';



}



//Funcion para que se creen las fichas aleatorias



void fichaordenador(char c[3][3]) {
    int i, j, k;



    srand(time(NULL));
    //Tenemos que comprobar si las casillas estan ocupadas
    do {
        i = rand() % 3; //Nos va a dar un numero aleatorio entre 0 y 2
        j = rand() % 3;
        k = 0;



        if (c[i][j] == 'X' || c[i][j] == 'O') {
            k = 1;



        }



    } while (k == 1); //Saldrá del bucle cuando k sea 0



    c[i][j] = 'O';





}
//Función para el tablero



void tablero(char c[3][3]) {
    int i, j;



    for (i = 0; i < 3; i++) {
        for (j = 0; j < 3; j++) {
            printf("| %c |", c[i][j]); //Lineas entre cada numero
        }
        printf("\n---------------\n"); //Raya que separa la fila
    }
}



//Función para saber q has ganado



int ganador(char c[3][3]) {
    if (c[0][0] == 'X' || c[0][0] == 'O') {
        if (c[0][0] == c[0][1] && c[0][0] == c[0][2]) {
            if (c[0][0] == 'X') {
                return 0; //Gana el jugador
            } else {
                return 1; //Pierde
            }
        }
        if (c[0][0] == c[1][0] && c[0][0] == c[2][0]) {
            if (c[0][0] == 'X') {
                return 0; //Gana el jugador
            } else {
                return 1; //Pierde
            }
        }
    }
    if (c[1][1] == 'X' || c[1][1] == 'O') {
        if (c[1][1] == c[0][0] && c[1][1] == c[2][2]) {
            if (c[1][1] == 'X') {
                return 0; //Gana el jugador
            } else {
                return 1; //Pierde
            }
        }
        if (c[1][1] == c[1][0] && c[1][1] == c[1][2]) {
            if (c[1][1] == 'X') {
                return 0; //Gana el jugador
            } else {
                return 1; //Pierde
            }
        }
        if (c[1][1] == c[2][0] && c[1][1] == c[0][2]) {
            if (c[1][1] == 'X') {
                return 0; //Gana el jugador
            } else {
                return 1; //Pierde
            }
        }
        if (c[1][1] == c[0][1] && c[1][1] == c[2][1]) {
            if (c[1][1] == 'X') {
                return 0; //Gana el jugador
            } else {
                return 1; //Pierde
            }
        }
    }
    if (c[2][2] == 'X' || c[2][2] == 'O') {
        if (c[2][2] == c[2][0] && c[2][2] == c[2][1]) {
            if (c[2][2] == 'X') {
                return 0; //Gana el jugador
            } else {
                return 1; //Pierde
            }
        }
        if (c[2][2] == c[0][2] && c[2][2] == c[1][2]) {
            if (c[2][2] == 'X') {
                return 0; //Gana el jugador
            } else {
                return 1; //Pierde
            }
        }
    }
    return 2;
}

void historia1() {
    printf("Nos encontramos en el Castillo de Masterra, donde Marcos, el hombre que se encargaba de su mantenimiento, andaba por el pasillo de la planta baja. Iba hacia la sala de baile ya que se aproximaba una tormenta y hab%ca una gotera que arreglar.\n",161);
    system("pause>>null \n\n");
    system("cls");
}
void historia2(){
    printf("De repente, dos disparos interrumpieron el silencio de la ma%cana. Marcos supo que hab%can disparado desde el gabinete de curiosidades donde el vizconde guardaba los recuerdos de sus viajes.\n ",164,161);
    printf("Marcos echo a correr y en su carrera se cruz%c con Magda, la sobrina del vizconde, y con Arsenio, su marido. Sal%can precipitados de sus habitaciones. Tambi%cn se encontr%c con Crist%cbal, el hijo y heredero del vizconde.\n",162,161,130,162,162);
    printf("Llegaron al gabinete de curiosidades, situado en la torre del catillo. Crist%cbal pens%o en ponerse delante de la puerta de vidrio con acceso al jard%cn para atrapar al ladr%cn, ya que la puerta interior no se pod%ca abrir, ya que estaba cerrada.",162,162,161,162);
    printf("Crist%cbal se apoyo en la puerta vidriada para ver el interior de la sala y descubri%c los cuerpos de sus padres. El joven estrello una piedra contra la puerta para entrar al gabinete que estaba herm%cticamente cerrado.\n",162,162,130);
    system("pause>>null \n\n");
    system("cls");
}
void investigacion1(){
    printf("Los polic%cas de esta investigaci%cn opinan que el marido ha matado a su esposa antes de suicidarse. Pero t%c eres un experto en este tipo de casos y no crees que los acontecimientos hayan sucedido as%c.\n",161,162,163,161);
    system("pause>>null \n\n");
    system("cls");
}
void investigacion2(){
    printf("Entras al gabinete y lo primero que ves son un mont%cn de vitrinas con centenares de objetos extravagantes. Marcos te explica que era la pasi%cn del vizconde coleccionar este tipo de cosas.\n",162,162);
    printf("- Qui%cn encontr%c los cuerpos? - preguntas\n-Crist%cbal y yo, se%cora- responde Marcos\n-vio a alguien huir?\n-No, se%cora\n-Aqu%c huele a tabaco. - comentas\n-Al vizconde le gustaba fumar puros en el gabinete.\nLos polic%cas te ense%can la pistola que se encuentra en el suelo, como presunta arma del homicidio.\n",130,162,162,164,164,161,161,164);
    printf("Marcos explica que es una pistola antigua de bolsillo de doble ca%c%cn, dos disparos, con p%clvora. Y los polic%cas agregan que tiene las huellas del vizconde.\nLa habitaci%cn cuenta con tres salidas, una puerta que da al vest%cbulo, y dos puertas vidriadas que se abren al jard%cn. Las dos con cerrojos\n",164,162,162,161,162,161,161);
    printf("-todas las salidas estaban cerradas por dentro, herm%cticamente- A%cade Marcos\n-Bien interrogar%c a Crist%cbal y luego os contar%c por que esta sala no estaba cerrada herm%cticamente- dices saliendo del gabinete.\n",130,164,120,162,130,130);
    printf(" La habitaci%cn de Crist%cbal se encuentra en el primer piso del castillo.\nLe preguntas sobre la relaci%cn de sus padres, con lo que contesta que sus padres se llevaban mal. Que su madre no quer%ca seguir viviendo en el castillo, pero su padre no se quer%ca ir.\n",162,162,162,130,130);
    printf("Crist%cbal te comenta que cuesta mucho mantener el castillo pero que su padre le dedic%c media vida y parte de su fortuna.\n- Cu%cndo entrasteis al gabinete, notaste humo?\n",162,162,160);
    printf("-No, solo ol%ca a tabaco, pero aparte de eso no hab%ca ning%cn tipo de humo- responde Crist%cbal sorprendido\n-Bien pues le pedir%c que no deje el castillo antes de que me vaya. Y cuando lo deje ser%c para ir a la c%crcel.",161,161,163,162,130,160);
    system("pause>>null \n\n");
    system("cls");
}
void resolver(){
    printf("El gabinete no est%c herm%cticamente cerrado porque si lo hubiera estado el sitio oler%ca a p%clvora, por lo que los disparos no se hicieron dentro del gabinete.\n",160,130,161,162);
    printf("Se hicieron desde el exterior y fue Crist%cbal quien disparo a trav%cs de la puerta vidriada, y volvi%c al pasillo a esperar a Marcos. Cuando llegaron los dos a la puerta tiro la piedra contra los mismos agujeros de bala. Borro sus huellas y dejo la pistola en la mano de su padre.\n",162,130,162);
    printf("Crist%cbal quer%ca heredar la fortuna de su padre y su padre le reprochaba constantemente sus malos h%cbitos y que le iba a desheredar, esta fue la soluci%cn de Crist%cbal.",162,161,160,162,162);
    system("pause>>null \n\n");
    system("cls");
}
void guiones(int largo) {
	int i = 0;
	printf("\n\n");
	printf("Adivina la palabra:                 ");
	for (i = 1; i < largo; i++) {
		printf("_ ");

	}
	printf("\n\n");
}

void historial(char letra, char *palabra, char* vector, int largo, int* flag, int intentos) {
	int i, j, aciertos = 0;
	for (i = 0; i < largo; i++) {
		if (letra == *(palabra + i)) {

			aciertos++;
			*(vector + i) = letra;
			//flag = 1;
		}
		else
		{

			if (*(vector + i) >= 65 && *(vector + i) <= 90); // NO poner un '_' si existe una letra en ese espacio.
			else *(vector + i) = '_'; // para el resto sí.
		}
	}
	if (aciertos >= 1)
		*flag = 1;
	else {
		*flag = 2;
	}
	aciertos = 0;

	printf("\n\n");
	printf("                                    ");
	for (i = 0; i < largo - 1; i++)
	{
		printf("%c ", *(vector + i));
	}
	printf("\n\n");



	int final = 1;
	for (j = 0; j < largo - 1; j++) {
		if (*(vector + j) == *(palabra + j)) final = final * 1;
		else final = final * 0;
	}
	if (final == 1) {
		if (intentos == 0) printf("Enhorabuena, has salvado a Marcos sin fallos");
		else
		{
			printf("\n\nEnhorabuena, has salvado a Marcos con %d fallo", intentos);
			if (intentos > 1) printf("s");
			printf("!!\n\n");
			system("pause>>null \n\n");
			system("cls");

			char respuesta[31];
                        printf("Donde mato Critobal a sus padres? Dentro o fuera del gabinete?\n");
                        printf("Escribe respuesta:\n");
                        scanf(" %30s", respuesta);
                        if (strcmp(respuesta,"fuera")!=0)
                        {
                        printf("Has perdido, sigue intentandolo.");
                        }
                        else
                        {
                        printf("Has resuelto el asesinato!!!! Superaste el Scape Room!!!!");
                        }
                        system("pause>>null \n\n");
                        system("cls");
                        resolver();
                        exit(1);

		}

		system("PAUSE");
	}
	return;
}
