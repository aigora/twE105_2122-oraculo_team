#define INTRO 13

#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<conio.h>
#include<time.h>


#define NUM_PALABRAS 16           //Numero de palabras
#define MAX_STRING 20            //Longitud máxima de la cadena inicial.
#define NUM_INTENTOS 5           //Número de intentos



void guiones(int);
void historial(char letra, char* palabra, char* vector, int largo, int* flag, int intentos);

int main(void) {


	int intro = 0, gamemode = 0;
	printf("Bienvenido al juego del ahorcado.\n\n");
	printf("Para poder resolver el asesinato, primero tendras que salvar al hombre del ahorcado.\n\n");
	system("pause>>null \n\n");
	system("cls");


	int  largo;                                          //Longitud de la palabra.
	char *palabra = NULL, letra;                         //Cadena de la palabra y la letra introducida por el usuario.
	int  intentos = 0;                                   //Numero de intentos.
	int  flag = 0;

	if (gamemode == 0)
	{

		srand(time(NULL)); //aleatorio
		char *bateria[] = { "CAMION","PUENTE","COCODRILO","SAPO","SOMBRERO","DELEGADO","HELADO","LATA","PELOTA","PIMIENTO","AGUA",
							"CHOCOLATE","HIPOPOTAMO","APROBAR","TRABAJO","INFORMATICA" };
		int aleatorio = rand() % ((NUM_PALABRAS - 1) + 1);
		//Genera entre 0 1 2 3 4

		largo = strlen(bateria[aleatorio]) + 1;
		palabra = (char*)calloc(largo, sizeof(char));

		if (palabra == NULL) {
			printf("No se ha podido reservar la memoria.");
			exit(1);
		}

		else strcpy(palabra, bateria[aleatorio]);
		printf("Una palabra ha sido escogida. Buena Suerte!");

	}



	guiones(largo);


	char *vector;
	vector = (char*)calloc(largo, sizeof(char));                        //Vector vacio.
	if (vector == NULL) {
		printf("No se ha podido reservar la memoria.");
		exit(1);
	};



	char *ahorcado[] = {
					 " ",
					 "                                                                      |=====|\n"
					 "                                                                            |\n"
					 "                                                                            |\n"
					 "                                                                            |\n"
					 "                                                                           ===\n",
					 "                                                                      |=====|\n"
					 "                                                                      O     |\n"
					 "                                                                            |\n"
					 "                                                                            |\n"
					 "                                                                           ===\n",
					 "                                                                      |=====|\n"
					 "                                                                      O     |\n"
					 "                                                                      |     |\n"
					 "                                                                            |\n"
					 "                                                                           ===\n",
					 "                                                                      |=====|\n"
					 "                                                                      O     |\n"
					 "                                                                     -|-    |\n"
					 "                                                                            |\n"
					 "                                                                           ===\n",
					 "                                                                      |=====|\n"
					 "                                                                      O     |\n"
					 "                                                                     -|-    |\n"
					"                                                                     / \\    |\n"
					 "                                                                           ===\n"

	};



	//juego

	while (flag == 0) {


		//introduce letra el usuario
		printf("Adivina una letra:  ");
		scanf("%c", &letra);
		printf("\n");
		getchar();


		while (letra < 65 || (letra > 90 && letra < 97) || letra>122) {            // Condiciones de introducir una letra mayus o minus.
			printf("Por favor, introduzca un caracter valido.");
			scanf("%c", &letra);
			getchar();
		}
		system("cls");
		//transformamos todas las letras a mayusculas
		if (letra >= 97) letra = letra - 32;

		/*Comprobar si la letra introducida está en la palabra y completar los huecos*/
		historial(letra, palabra, vector, largo, &flag, intentos);


		if (flag == 2)
		{
			intentos++;
			printf("LETRA INCORRECTA.");
			printf("\n\n%s\n\n", ahorcado[intentos]);                             //sale ahorcado.

			if (intentos >= NUM_INTENTOS)
			{
				printf("Se acabo, ha muerto ahorcado.\n");
				printf("La palabra correcta era %s.\n", palabra);
				break;
			}
			switch (intentos) {
			case 1:printf("Ten mas cuidado...\n\n"); break;
			case 2:printf("Esto puede ser peligroso...\n\n"); break;
			case 3:printf("La cosa se pone muy fea...\n\n"); break;
			case 4:printf("Se acerca su final!\n\n"); break;
			}
		}
		if (flag == 1)
		{
			if (intentos > 0)
			{
				printf("LETRA CORRECTA.");
				printf("\n\n%s\n\n", ahorcado[intentos]);
			}
			printf("Bien hecho!\n");
		}
		/* Reseteamos el valor de la flag para que vuelva al bucle */
		flag = 0;


	}


	system("pause");
	free(palabra); // a veces da fallo, estudiar.
	free(vector);
	return 0;
}





void guiones(int largo) {
	int i = 0;
	printf("\n\n");
	printf("Adivina la palabra:                 ");
	for (i = 1; i < largo; i++) {
		printf("_ ");

	}
	printf("\n\n");
}

void historial(char letra, char *palabra, char* vector, int largo, int* flag, int intentos) {
	int i, j, aciertos = 0;
	for (i = 0; i < largo; i++) {
		if (letra == *(palabra + i)) {

			aciertos++;
			*(vector + i) = letra;
			//flag = 1;
		}
		else
		{

			if (*(vector + i) >= 65 && *(vector + i) <= 90); // NO poner un '_' si existe una letra en ese espacio.
			else *(vector + i) = '_'; // para el resto sí.
		}
	}
	if (aciertos >= 1)
		*flag = 1;
	else {
		*flag = 2;
	}
	aciertos = 0;

	printf("\n\n");
	printf("                                    ");
	for (i = 0; i < largo - 1; i++)
	{
		printf("%c ", *(vector + i));
	}
	printf("\n\n");


	int final = 1;
	for (j = 0; j < largo - 1; j++) {
		if (*(vector + j) == *(palabra + j)) final = final * 1;
		else final = final * 0;
	}
	if (final == 1) {
		if (intentos == 0) printf("Enhorabuena, has salvado al ahorcado sin fallos");
		else
		{
			printf("\n\nEnhorabuena, has salvado al ahorcado con %d fallo", intentos);
			if (intentos > 1) printf("s");
			printf("!!\n\n");
			system("pause>>null \n\n");
			exit(0);
		}

		system("PAUSE");
	}

	return;
}

